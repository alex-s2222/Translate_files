1
00:00:00,360 --> 00:00:02,850
Теперь у вас должен быть запущен и запущен PyCharm,

2
00:00:03,030 --> 00:00:05,940
и мы, наконец, готовы заняться сегодняшним проектом,

3
00:00:06,240 --> 00:00:10,110
который мы собираемся написать в PyCharm. Вас только что наняли.

4
00:00:10,200 --> 00:00:14,250
Поздравляю, но сначала кофе.

5
00:00:14,790 --> 00:00:18,750
Мы все знаем, что программисты не могут работать, если они не накачаны кофе.

6
00:00:19,260 --> 00:00:24,180
Итак, ваша компания попросила вас создать код для кофемашины.

7
00:00:25,050 --> 00:00:29,310
Теперь вы, очень умно, выходите в интернет и смотрите на другие кофемашины.

8
00:00:29,580 --> 00:00:34,380
И вы замечаете, что покупка кофемашины стоит всего 230 долларов,

я
00:00:34,860 --> 00:00:38,310
но ты не собираешься обманывать. Вы будете создавать все с нуля.

10
00:00:38,910 --> 00:00:42,960
И, к счастью, нам не нужно создавать аппаратное обеспечение, потому что мы программисты.

11
00:00:42,990 --> 00:00:43,740
правильно?

12
00:00:43,740 --> 00:00:48,740
Но мы собираемся использовать эту реальную кофеварку в качестве вдохновения для нашего

13
00:00:49,170 --> 00:00:53,670
виртуальную кофемашину, отметив особенности и возможности.

14
00:00:54,330 --> 00:00:58,770
Так что же он говорит? Я нашел здесь замечательную графику

15
00:00:59,130 --> 00:01:02,130
что говорит мне, что это три горячих аромата

16
00:01:02,640 --> 00:01:07,170
что я предполагаю, эти три кнопки, это монеты работают

17
00:01:07,830 --> 00:01:12,720
что, я думаю, они имеют в виду, что он работает от монет, и больше ничего не может

18
00:01:12,720 --> 00:01:13,530
делать.

19
00:01:13,530 --> 00:01:18,510
Давайте возьмем этот пример и сделаем его цифровую версию.

20
00:01:18,510 --> 00:01:20,880
Мы собираемся создать собственную кофемашину.

21
00:01:21,330 --> 00:01:25,830
И первый шаг, который нам нужно воспроизвести, — это возможность сделать три горячих

22
00:01:25,830 --> 00:01:30,210
вкусы. Итак, вкусы, которые мы собираемся приготовить: 1. эспрессо,

23
00:01:30,420 --> 00:01:33,750
2. латте и 3. капучино. Здесь

24
00:01:33,750 --> 00:01:36,870
рецепты этих трех видов напитков.

25
00:01:37,410 --> 00:01:40,140
Каждому из них требуется разное количество воды,

26
00:01:40,260 --> 00:01:43,470
другое количество кофе и другое количество молока.

27
00:01:43,920 --> 00:01:46,770
И они также каждая половина другой цене.

28
00:01:47,520 --> 00:01:51,360
Мы также собираемся моделировать все эти данные в нашей программе для кофеварки.

29
00:01:52,430 --> 00:01:55,040
Но, к счастью для вас, в стартовом коде

30
00:01:55,100 --> 00:01:58,250
Я уже включил все эти данные в словарь.

31
00:01:58,550 --> 00:02:00,170
Так что вам не нужно помнить об этом,

32
00:02:00,470 --> 00:02:03,530
хотя это может помочь, если вы дома и решили, что очень хотите

33
00:02:03,530 --> 00:02:07,520
латте вместо обычного черного кофе. Теперь, кроме того,

34
00:02:07,520 --> 00:02:10,820
у кофемашины есть некоторые ресурсы, которыми она должна управлять.

35
00:02:11,180 --> 00:02:14,390
Итак, все начинается с 300 мл воды в баке,

36
00:02:14,630 --> 00:02:18,050
200 мл молока и 100 г кофе.

37
00:02:18,530 --> 00:02:22,970
Вторая особенность нашей кофемашины заключается в том, что она работает от монет.

38
00:02:23,450 --> 00:02:28,450
Итак, мы будем использовать американские монеты, а у них есть четыре типа монет:

39
00:02:29,060 --> 00:02:31,760
пенни, пятак, десятицентовик и четвертак.

40
00:02:32,330 --> 00:02:34,520
Раньше у них тоже был доллар как монета

41
00:02:34,910 --> 00:02:38,000
но несколько лет назад они перестали это чеканить. Так что не будем считать

42
00:02:38,120 --> 00:02:40,370
и это, вероятно, означает, что для нас на один оператор if меньше.

43
00:02:40,880 --> 00:02:45,680
Обратите внимание, сколько стоит каждая из этих монет. Пенни стоит цента,

44
00:02:46,040 --> 00:02:49,010
пятицентовик стоимостью 5 центов и десятицентовик 10 центов,

45
00:02:49,040 --> 00:02:51,200
а четверть — это четверть доллара.

46
00:02:51,650 --> 00:02:56,650
Они, представленные в десятичных значениях, будут выглядеть примерно так.

47
00:02:57,920 --> 00:03:02,620
Теперь вот важная часть. Давайте подумаем, каковы наши требования к программе

48
00:03:02,650 --> 00:03:05,080
если мы сломаем его один.

49
00:03:05,230 --> 00:03:08,050
1. Нам нужно, чтобы наша кофемашина могла распечатать отчет.

50
00:03:08,440 --> 00:03:11,680
Он должен быть в состоянии сказать нам, какие ресурсы у него остались,

51
00:03:11,710 --> 00:03:14,470
сколько воды осталось, сколько молока и так далее.

52
00:03:14,980 --> 00:03:18,430
Если вы перейдете к завершенной версии кофемашины,

53
00:03:18,790 --> 00:03:21,190
ссылка есть в ресурсах курса,

54
00:03:21,610 --> 00:03:25,780
и вы можете пойти дальше и опробовать окончательный вариант кофемашины.

55
00:03:26,500 --> 00:03:31,500
Итак, допустим, нам нужен отчет обо всех ресурсах, которые есть у машины.

56
00:03:31,990 --> 00:03:36,970
Все, что нам нужно сделать, это ввести отчет, и мы сможем увидеть все ресурсы, которые у нас есть.

57
00:03:37,600 --> 00:03:40,030
Теперь, помимо возможности распечатать отчет,

58
00:03:40,420 --> 00:03:45,400
мы также хотим иметь возможность проверять достаточность ресурсов, когда пользователь

59
00:03:45,400 --> 00:03:50,380
заказывает напиток. Теперь предположим, что пользователь решил заказать латте.

60
00:03:50,950 --> 00:03:55,950
Он просит меня вставить несколько монет, а затем дает мне сдачу и дает мне

61
00:03:56,530 --> 00:03:59,650
латте. Но теперь, если я проверю отчет,

62
00:04:00,010 --> 00:04:03,520
Я вижу, что у меня осталось всего сто мил воды.

63
00:04:03,910 --> 00:04:08,470
И я знаю из предыдущего слайда, что латте и капучино будут

64
00:04:08,470 --> 00:04:12,370
нужно больше, чем это количество воды. Итак, давайте посмотрим, что произойдет

65
00:04:12,400 --> 00:04:16,510
если я пойду и закажу капучино. Он говорит, извините,

66
00:04:16,510 --> 00:04:17,800
не хватает воды.

67
00:04:18,280 --> 00:04:23,280
Так что наша программа умеет просматривать все ресурсы, которые есть у машины,

68
00:04:24,340 --> 00:04:29,340
сверяет его с рецептом напитка, который мы пытаемся приготовить, и сообщает

69
00:04:29,890 --> 00:04:34,270
пользователя, если недостаточно воды или молока,

70
00:04:34,630 --> 00:04:37,390
и пока одного из ресурсов недостаточно,

71
00:04:37,630 --> 00:04:42,580
тогда он не может приготовить напиток и дает обратную связь пользователю. В настоящее время,

72
00:04:42,610 --> 00:04:43,720
как вы видели раньше,

73
00:04:44,140 --> 00:04:48,550
наша программа также должна иметь возможность обрабатывать монеты, потому что наша машина

74
00:04:48,580 --> 00:04:49,413
эксплуатировался.

75
00:04:50,170 --> 00:04:54,610
Так что никаких причудливых бесконтактных платежей или платежей с помощью часов Apple, ничего подобного.

76
00:04:54,700 --> 00:04:57,910
У нас есть только монеты. Когда мы что-то заказываем,

77
00:04:58,690 --> 00:05:01,090
он должен попросить нас вставить монеты.

78
00:05:01,630 --> 00:05:04,810
И он запросит количество монет каждого типа.

79
00:05:05,260 --> 00:05:09,490
Итак, допустим, я вставляю по одному из каждого, тогда в этом случае

80
00:05:09,580 --> 00:05:14,580
на самом деле не хватает денег, чтобы покрыть мою выпивку, и он возвращает деньги и

81
00:05:14,740 --> 00:05:19,630
не дает мне пить. Но с другой стороны, если я вложу достаточно денег,

82
00:05:20,410 --> 00:05:25,150
тогда он должен быть в состоянии рассчитать, сколько денег стоят все эти монеты

83
00:05:25,570 --> 00:05:29,530
а затем рассчитайте сумму сдачи, исходя из стоимости моего напитка.

84
00:05:30,010 --> 00:05:34,480
А затем он должен подать мне мой напиток и сказать, чтобы я наслаждался. Так,

85
00:05:34,510 --> 00:05:37,720
помимо возможности обрабатывать четыре типа монет,

86
00:05:37,750 --> 00:05:41,560
расчет фактической денежной стоимости на основе количества баллов,

87
00:05:41,860 --> 00:05:44,500
он также должен проверить, что транзакция прошла успешно.

88
00:05:44,530 --> 00:05:49,530
Что пользователь не пытался обмануть нас, не давая достаточно монет и не спрашивая

89
00:05:49,540 --> 00:05:53,080
выпить. Так что, если они не вставили достаточно монет,

90
00:05:53,350 --> 00:05:55,780
тогда мы просто вернем им деньги и скажем им, извините

91
00:05:55,780 --> 00:05:58,970
вот и денег не хватает, и не дай им их пропить.

92
00:05:59,390 --> 00:06:02,150
Но если сделка прошла успешно,

93
00:06:02,450 --> 00:06:07,040
тогда мы собираемся сварить кофе. И в процессе приготовления кофе,

94
00:06:07,280 --> 00:06:09,560
нам придется вычесть ресурсы.

95
00:06:10,070 --> 00:06:12,680
Обратите внимание, как каждый раз, когда мы делаем напиток,

96
00:06:12,710 --> 00:06:16,670
скажем, в это время мы сделали латте и до латте,

97
00:06:16,700 --> 00:06:20,300
у нас есть 300 мельниц молока. Но после латте,

98
00:06:20,330 --> 00:06:24,110
когда мы запросили отчет, вы можете видеть, что вода уменьшилась,

99
00:06:24,110 --> 00:06:25,190
молока стало меньше,

100
00:06:25,220 --> 00:06:28,840
кофе уменьшили, а деньги положили в сундук.

101
00:06:29,690 --> 00:06:32,150
Эта программа, хоть и кажется простой,

102
00:06:32,180 --> 00:06:35,240
просто простая цифровая версия кофеварки,

103
00:06:35,720 --> 00:06:38,420
на самом деле у него довольно много требований.

104
00:06:38,960 --> 00:06:43,960
Поэтому я рекомендую вам посмотреть на экран и попытаться увидеть, как каждый из

105
00:06:44,510 --> 00:06:49,510
Требования работают, поэкспериментировав с окончательной версией кода. В настоящее время

106
00:06:51,080 --> 00:06:56,080
Я создал для вас подробную спецификацию программы в виде файла PDF

107
00:06:56,690 --> 00:06:59,510
которые вы можете скачать в ресурсах курса.

108
00:06:59,930 --> 00:07:04,520
И это включает в себя гораздо больше деталей по каждому из этих пунктов. Например,

109
00:07:04,520 --> 00:07:08,360
что должна печатать подсказка в начале программы,

110
00:07:08,810 --> 00:07:12,020
а потом как выключить машину,

111
00:07:12,410 --> 00:07:17,410
как печатать отчеты и как каждый из этих пунктов должен работать в деталях.

112
00:07:19,010 --> 00:07:23,780
Загрузите это и убедитесь, что вы прочитали каждый из разделов и протестировали

113
00:07:23,780 --> 00:07:27,620
это в финальной рабочей версии проекта.

114
00:07:28,730 --> 00:07:29,810
Как только вы будете готовы,

115
00:07:29,870 --> 00:07:34,760
вы можете продолжить и перейти к начальной версии кода. И снова,

116
00:07:34,760 --> 00:07:36,560
Я делюсь этим с помощью Repl.it,

117
00:07:36,830 --> 00:07:39,560
но я хочу, чтобы ты скопировал все, что здесь есть,

118
00:07:39,650 --> 00:07:42,290
есть только один файл main.py,

119
00:07:43,010 --> 00:07:48,010
и я хочу, чтобы вы создали новый проект с помощью PyCharm и назвали его coffee

120
00:07:48,410 --> 00:07:48,880
машина,

121
00:07:48,880 --> 00:07:49,713
Правильно?

122
00:07:51,940 --> 00:07:56,920
А затем создайте новый файл внутри вашего проекта с именем main.py,

123
00:07:58,750 --> 00:08:03,550
а затем вставьте весь начальный код в файл main.py.

124
00:08:04,060 --> 00:08:08,260
И теперь вы собираетесь кодировать внутри этого файла. И как только вы будете готовы,

125
00:08:08,290 --> 00:08:13,210
вы собираетесь нажать «Выполнить», и вы сможете запустить этот main.py здесь

126
00:08:13,510 --> 00:08:16,750
и это будет действовать как ваша консоль. В настоящее время,

127
00:08:16,750 --> 00:08:19,750
одна очень удобная функция

128
00:08:19,750 --> 00:08:23,020
PyCharm — это то, что называется отслеживанием дел.

129
00:08:23,830 --> 00:08:28,780
В то время как ранее в Repl.it я создавал задачи, и вы могли

130
00:08:28,780 --> 00:08:33,280
просмотреть их. Но если у меня много дел в разных местах,

131
00:08:33,580 --> 00:08:35,410
вы не можете увидеть их все сразу.

132
00:08:35,410 --> 00:08:37,420
Вы должны прокрутить файл в поисках их.

133
00:08:37,960 --> 00:08:39,850
Но в профессиональном инструменте

134
00:08:40,120 --> 00:08:45,070
на самом деле у нас есть нечто, называемое отслеживанием дел, и это вкладка, которая находится здесь.

135
00:08:45,940 --> 00:08:49,210
Итак, если я продолжу и приму некоторые из этих требований программы,

136
00:08:49,510 --> 00:08:52,540
Я могу поставить их в качестве задач. Чтобы создать

137
00:08:52,540 --> 00:08:57,540
to-do вы должны следовать синтаксису. Сначала знак фунта

138
00:08:58,320 --> 00:09:03,320
а потом мы пишем TODO заглавными буквами и замечаем, как только что изменился цвет

139
00:09:03,570 --> 00:09:06,690
сейчас, и теперь вы можете увидеть на вкладке todo,

140
00:09:06,720 --> 00:09:08,640
он нашел один элемент списка дел.

141
00:09:09,420 --> 00:09:12,930
Теперь мы можем написать todo номер один

142
00:09:13,530 --> 00:09:17,970
и это для печати отчета обо всех ресурсах кофемашины.

143
00:09:19,080 --> 00:09:23,010
Теперь предположим, что я создал задачу где-то в другом месте, верно?

144
00:09:23,040 --> 00:09:24,630
Как и весь путь сюда,

145
00:09:25,770 --> 00:09:30,770
проверьте, достаточно ли ресурсов, чтобы сделать заказ напитка. И обратите внимание, как

146
00:09:31,620 --> 00:09:34,620
они совершенно в разных местах в разном порядке.

147
00:09:34,920 --> 00:09:38,490
Но каждый раз, когда я создаю одну из этих задач, используя этот формат,

148
00:09:38,520 --> 00:09:39,810
его заберут в

149
00:09:39,810 --> 00:09:43,500
вкладка дел. И вы можете пойти дальше и посмотреть, где они живут.

150
00:09:43,860 --> 00:09:47,370
Итак, он нашел два элемента внутри нашего main.py.

151
00:09:47,850 --> 00:09:51,390
и вы можете видеть, что этот должен сделать один, этот - сделать два.

152
00:09:51,690 --> 00:09:52,770
И когда вы нажимаете на них,

153
00:09:52,860 --> 00:09:55,500
они приведут вас к нужным местам в вашем коде.

154
00:09:56,460 --> 00:10:01,460
Используйте это, чтобы разбить проблему на более мелкие проблемы, которые вы можете решить одним

155
00:10:01,530 --> 00:10:02,310
одним,

156
00:10:02,310 --> 00:10:06,720
так же, как вы делали раньше, и попытайтесь увидеть, сможете ли вы завершить этот проект.

157
00:10:07,500 --> 00:10:11,100
Сразу предупреждаю: этот проект довольно амбициозен.

158
00:10:11,400 --> 00:10:14,130
Но теперь у вас есть профессиональные инструменты, которые помогут вам,

159
00:10:14,520 --> 00:10:17,850
и у вас гораздо больше навыков за плечами.

160
00:10:18,390 --> 00:10:22,680
Так что дайте этой проблеме по крайней мере час, чтобы поработать над ней и убедитесь, что вы

161
00:10:22,680 --> 00:10:27,180
удовлетворять всем критериям, изложенным в требованиях программы

162
00:10:27,270 --> 00:10:32,270
а также что ваша программа работает точно так же, как финальная версия

163
00:10:33,690 --> 00:10:34,500
кофе-машина.

